import { toast } from "react-toastify";
import { convertTimestampToDateTime } from "../../helper";
import { useGetAllLab } from "../../hooks";
import { Modal } from "antd";
import { useState } from "react";
import { useUpdateStatusLab } from "../../hooks/labs/useUpdateStatusLab";

const LabManagePage = () => {
  const { labs } = useGetAllLab();
  const [open, setOpen] = useState(false);
  const [idLab, setIdLab] = useState("");

  console.log(labs);

  const { mutate: updateLab } = useUpdateStatusLab();

  const handleUpdateLab = () => {
    console.log("update");
    updateLab(idLab, {
      onSuccess: (response: any) => {
        if (response?.isSuccess) {
          console.log("üöÄ ~ handleUpdateLab ~ response:", response);
          toast.success("C·∫≠p nh·∫≠p tr·∫°ng th√°i th√†nh c√¥ng");
          setOpen(false);
        } else {
          toast.error("C·∫≠p nh·∫≠p tr·∫°ng th√°i th·∫•t b·∫°i");
          setOpen(false);
        }
      },
      onError: () => {
        toast.error("C·∫≠p nh·∫≠p tr·∫°ng th√°i th·∫•t b·∫°i");
      },
    });
  };

  return (
    <>
      <Modal
        title="Th√™m gi√°o vi√™n m·ªõi"
        centered
        open={open}
        onOk={() => handleUpdateLab()}
        onCancel={() => setOpen(false)}
        width={600}
      >
        <div className="flex flex-col gap-2">
          <span className="font-semibold text-xl text-red-500">
            Ph√≤ng n√†y ƒëang ·ªü tr·∫°ng th√°i ƒëang s·ª≠ d·ª•ng
          </span>
          <span>
            N·∫øu b·∫°n ch·∫Øc gi√°o vi√™n ƒë√£ r·ªùi kh·ªèi ph√≤ng m√† qu√™n c·∫≠p nh·∫≠p tr·∫°ng
            th√°i, h√£y c·∫≠p nh·∫≠p ngay.
          </span>
        </div>
      </Modal>
      <div className="flex flex-col gap-4">
        <div>
          <span className="text-xl uppercase font-semibold text-gray-600">
            Danh s√°ch ph√≤ng h·ªçc
          </span>
        </div>
        <div className="w-full grid grid-cols-4 gap-10 mt-4">
          {labs &&
            labs?.map((item: any, index: number) => (
              <div
                onClick={() => {
                  if (!item?.isDoingUse) {
                    toast.error("Ph√≤ng ch∆∞a ƒë∆∞·ª£c s·ª≠ d·ª•ng");
                  } else {
                    setIdLab(item?.id);
                    setOpen(true);
                  }
                }}
                className={`flex flex-col gap-2 ${
                  item?.isDoingUse ? "bg-green-400" : "bg-yellow-300"
                } bg-opacity-50 hover:bg-opacity-100 cursor-pointer transition-all duration-300 rounded-2xl py-[34px] justify-center items-center`}
                key={index}
              >
                <span className="text-xl font-semibold">
                  M√£ ph√≤ng : {item?.id}
                </span>
                <span className="font-semibold">
                  Tr·∫°ng th√°i :{" "}
                  {item?.isDoingUse ? "ƒëang s·ª≠ d·ª•ng" : "ch∆∞a s·ª≠ d·ª•ng"}
                </span>
                <span className="text-center">
                  Ng√†y t·∫°o ph√≤ng : {convertTimestampToDateTime(item?.createdAt)}
                </span>
              </div>
            ))}
        </div>
      </div>
    </>
  );
};

export default LabManagePage;
